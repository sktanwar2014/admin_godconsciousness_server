{"version":3,"sources":["api/config/Constants.js","common/PageLoader.js","App.js","serviceWorker.js","index.js"],"names":["API_URL","API_CONSUMER","WEB_URL","APP_TOKEN","set","id","username","name","token","account_id","sessionStorage","setItem","get","getItem","remove","clear","cond1","this","cond2","PageLoader","style","alignItems","display","justifyContent","height","class","width","cx","cy","r","fill","stroke-width","stroke","stroke-miterlimit","Directions","lazy","Contact","Login","Events","OBEs","Miracles","Prayers","WelcomeMessage","FooterMessage","Blog","Home","BannerUpload","Editor","App","className","fallback","exact","path","render","to","props","notEmpty","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d2a2f8ba.chunk.js","sourcesContent":["export const API_URL = 'newgcadmin.a1abilities.co.nz'; // Config[KEY].API_URL;\nexport const AUTH_URL = 'newgcadmin.a1abilities.co.nz'; // Config[KEY].AUTH_URL;\nexport const API_CONSUMER = 'newgcadmin.a1abilities.co.nz'; // Config[KEY].API_URL;\n\n// export const API_URL = 'http://localhost:5001'; // Config[KEY].API_URL;\n// export const AUTH_URL = 'http://localhost:5001'; // Config[KEY].AUTH_URL;\n// export const API_CONSUMER = 'http://localhost:5001'; // Config[KEY].API_URL;\nexport const WEB_URL = 'newgc.a1abilities.co.nz'; \n\n\nexport const APP_TOKEN = {\n    set: ({id, username, name, token, account_id}) => {\n        sessionStorage.setItem('id', id);\n        sessionStorage.setItem('token', token);\n        sessionStorage.setItem('username', username);\n        sessionStorage.setItem('name', name);\n        sessionStorage.setItem('account_id', account_id);\n    },\n    get: () => ({\n        token: sessionStorage.getItem('token'),\n        account_id: sessionStorage.getItem('account_id'),\n        token: sessionStorage.getItem('token'),\n        username : sessionStorage.getItem('username'),\n        name : sessionStorage.getItem('name'),\n    }),\n    remove: () => {\n        sessionStorage.clear();\n    },\n    get notEmpty() {\n        const cond1 = this.get().token !== null;\n        const cond2 = this.get().token !== '';\n        return cond1 && cond2;\n    }\n}","import React, { Component } from 'react';\n\nconst PageLoader = () => {\n    return(\n        <div style= {{alignItems: 'center', display: 'flex', justifyContent: 'center', height: '100%'}}>\n            <svg class=\"circular\" width=\"48px\" height=\"48px\">\n                <circle class=\"path-bg\" cx=\"24\" cy=\"24\" r=\"22\" fill=\"none\" stroke-width=\"4\" stroke=\"#eeeeee\"/>\n                <circle class=\"path\" cx=\"24\" cy=\"24\" r=\"22\" fill=\"none\" stroke-width=\"4\" stroke-miterlimit=\"10\" stroke=\"#f4b214\"/>\n            </svg>\n        </div>\n    )\n}\n\nexport default PageLoader;","import React, {Suspense, lazy} from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport './App.css';\n\nimport {APP_TOKEN} from  './api/config/Constants.js';\nimport PageLoader  from './common/PageLoader';\n\nconst Directions = lazy(()=> import('./modules/Directions'));\nconst Contact = lazy(()=> import('./modules/ContactUs'));\nconst Login = lazy(()=> import('./modules/login'));\n\nconst Events = lazy(()=> import('./modules/Events'));\nconst OBEs = lazy(()=> import('./modules/OBEs'));\nconst Miracles = lazy(()=> import('./modules/Miracles'));\nconst Prayers = lazy(()=> import('./modules/Prayers'));\nconst WelcomeMessage = lazy(()=> import('./modules/WelcomeMessage.js'));\nconst FooterMessage = lazy(()=> import('./modules/FooterMessage.js'));\nconst Blog = lazy(()=> import('./modules/Blog.js'));\nconst Home = lazy(()=> import('./modules/Home.js'));\nconst BannerUpload = lazy(()=> import('./modules/Components/BannerUpload.js'));\nconst Editor = lazy(()=> import('./modules/Components/Editor.js'));\n\nfunction App() {\n  return (\n      <div className=\"main-wrapper\">\n        <div className=\"app\" id=\"app\">\n          <Router>\n            <Suspense fallback={ <PageLoader />}>\n              <Switch>\n                \n                <Route exact path=\"/\" render={() => <Redirect to=\"/login\" /> } />\n                <Route exact path=\"/login\" render={props => { return APP_TOKEN.notEmpty ? <Redirect to=\"/home\" /> :  <Login {...props} /> }}  />\n                <Route exact path=\"/home\" render={props => { return APP_TOKEN.notEmpty ? <Home {...props}/> :  <Redirect to=\"/login\" /> }} />                \n                <Route exact path=\"/bannerUpload\"  render={props => { return APP_TOKEN.notEmpty ? <BannerUpload {...props}  />  :  <Redirect to=\"/login\" />  }}  />\n                <Route exact path=\"/Events\" render={props => { return APP_TOKEN.notEmpty ? <Events {...props}/>  :  <Redirect to=\"/login\" />  }} />\n                <Route exact path=\"/Editor\"  render={props => { return APP_TOKEN.notEmpty ? <Editor {...props}  />  :  <Redirect to=\"/login\" />  }}  />\n                <Route exact path=\"/Miracles\" render={props => { return APP_TOKEN.notEmpty ? <Miracles {...props}/>  :  <Redirect to=\"/login\" />  }} />\n                <Route exact path=\"/Directions\" render={props => { return APP_TOKEN.notEmpty ? <Directions  {...props}/>  :  <Redirect to=\"/login\" />  }} />                \n                <Route exact path=\"/OBEs\" render={props => { return APP_TOKEN.notEmpty ? <OBEs {...props}/>  :  <Redirect to=\"/login\" />  }} />\n                <Route exact path=\"/Prayers\" render={props => { return APP_TOKEN.notEmpty ? <Prayers {...props}/>  :  <Redirect to=\"/login\" />  }} />\n                <Route exact path=\"/Contact\" render={props => { return APP_TOKEN.notEmpty ? <Contact {...props} />  :  <Redirect to=\"/login\" />  }} />\n                <Route exact path=\"/WelcomeMessage\" render={props => { return APP_TOKEN.notEmpty ? <WelcomeMessage {...props} />  :  <Redirect to=\"/login\" />  }} />\n                <Route exact path=\"/FooterMessage\" render={props => { return APP_TOKEN.notEmpty ? <FooterMessage {...props} />  :  <Redirect to=\"/login\" />  }} />\n                <Route exact path=\"/Blog\" render={props => { return APP_TOKEN.notEmpty ? <Blog {...props} />  :  <Redirect to=\"/login\" />  }} />\n              </Switch>\n            </Suspense>\n          </Router>\n        </div>\n      </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}