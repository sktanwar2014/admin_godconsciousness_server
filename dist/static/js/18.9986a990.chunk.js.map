{"version":3,"sources":["modules/Components/BannerUpload.js"],"names":["BannerUpload","props","type","location","state","pathLink","titleText","useState","preImages","setPreImages","currImage","setCurrImage","picType","setPicType","useEffect","getPrevBannerImage","a","FetchAPI","result","imageList","isNullOrUndefined","length","map","data","is_active","console","log","handleSetPrevImage","e","imageId","target","name","split","id","Number","updateBannerProduct","preventDefault","doc","FileReaders","toBase64","document","getElementById","files","alert","className","href","data-dismiss","aria-label","aria-hidden","data-type","onSubmit","class","for","src","API_URL","image_name","onClick","align","accept","onChange","window","File","FileList","FileReader","file","undefined","fileReader","onload","setAttribute","readAsDataURL","required","removeAttribute","value"],"mappings":"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","file":"static/js/18.9986a990.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {isNullOrUndefined} from 'util';\r\n\r\n// import Components\r\nimport Header from './Header';\r\nimport Sidebar from './Sidebar.js';\r\nimport FetchAPI from '../../api/APIs';\r\nimport { API_URL } from '../../api/config/Constants.js';\r\n\r\nimport FileReaders from  '../../utils/fileReader.js';\r\n\r\n\r\n\r\nexport default function BannerUpload(props) {\r\n    const type = props.location.state.type;\r\n  \r\n    let pathLink = '';\r\n    let titleText = '';\r\n    switch(type){\r\n        case 'Home'          :   titleText = 'Home'          ; pathLink = '/home';          break;\r\n        case 'Event'         :   titleText = 'Event'         ; pathLink = '/Events';        break;\r\n        case 'Miracle'       :   titleText = 'Miracle'       ; pathLink = '/Miracles';      break;\r\n        case 'Direction'     :   titleText = 'Direction'     ; pathLink = '/Directions';    break;\r\n        case 'OBE'           :   titleText = 'OBE'           ; pathLink = '/OBEs';          break;\r\n        case 'Prayer'        :   titleText = 'Prayer'        ; pathLink = '/Prayers';       break;\r\n        case 'Contact'       :   titleText = 'Contact'       ; pathLink = '/Contact';       break;        \r\n        case 'About'         :   titleText = 'About'         ; pathLink = '/home';          break;\r\n        case 'Blog'          :   titleText = 'Blogs'         ; pathLink = '/Blog';          break;\r\n\r\n        case 'DimpleAnil'    :   titleText = 'DimpleAnil'    ; pathLink = '/DimpleAnil';    break;\r\n        case 'AboutGC'       :   titleText = 'AboutGC'       ; pathLink = '/AboutGC';       break;\r\n        case 'Introduction'  :   titleText = 'Introduction'  ; pathLink = '/Introduction';  break;\r\n        \r\n   }\r\n    \r\n  \r\n    \r\n  \r\n    const [preImages, setPreImages] = useState([]);\r\n    const [currImage, setCurrImage] = useState('');\r\n    const [picType, setPicType] = useState(0); // 0 = no change, 1 = new upload, 2 = select from prev    \r\n    \r\n\r\n    useEffect(() => {\r\n      getPrevBannerImage();\r\n    },[]);\r\n\r\n    const getPrevBannerImage = async ()=> {\r\n      try{\r\n        const result = await FetchAPI.getPrevBannerImage({type: 'banner'+type});\r\n        setPreImages(result.imageList);\r\n        ((!isNullOrUndefined(result.imageList) && result.imageList.length > 0) ? result.imageList : []).map(data => {\r\n            if(data.is_active === 1){\r\n                setCurrImage(data);\r\n            }\r\n        })\r\n      }catch(e){\r\n        console.log('Error...', e);\r\n      }\r\n    }\r\n\r\n\r\n  const handleFileChange = (e) => {\r\n      if (window.File && window.FileList && window.FileReader) {\r\n          let file = e.target.files[0];\r\n          if(file !== null && file !== undefined && file !== \"\"){\r\n              let fileReader = new FileReader();\r\n              fileReader.onload = (e) => {\r\n                  document.getElementById(\"bannerImageThumb\").setAttribute('src',e.target.result);\r\n                  document.getElementById(\"bannerImageThumb\").setAttribute('title', \"Selected image\");\r\n              }\r\n              fileReader.readAsDataURL(file);\r\n              setPicType(1);\r\n          }\r\n      } else {\r\n          alert(\"Your browser doesn't support to File API\")\r\n      }\r\n  }\r\n\r\n  const handleFileRemove = (e) => {\r\n      document.getElementById(\"bannerImageThumb\").removeAttribute('src');\r\n      document.getElementById(\"bannerImageThumb\").removeAttribute('title');\r\n      document.getElementById(\"bannerImage\").value = '';\r\n      setPicType(0);\r\n  }\r\n\r\n  const handleSetPrevImage = (e) => {\r\n      let imageId = (e.target.name).split('-')[1];\r\n      (preImages.length > 0 ? preImages : []).map(data => {\r\n        if(data.id == Number(imageId)){\r\n              setCurrImage(data);\r\n              setPicType(2);\r\n          }\r\n      })\r\n  }\r\n\r\n\r\nconst updateBannerProduct = async (e) => {\r\n    e.preventDefault();\r\n    try{\r\n        let doc = '';\r\n        let imageId = 0;\r\n        if(picType === 1){\r\n            doc = await FileReaders.toBase64(document.getElementById('bannerImage').files[0]);\r\n        }else if(picType === 2){\r\n            imageId = currImage.id;\r\n        }\r\n        const result = await FetchAPI.updateBannerProduct({\r\n            picType : picType,\r\n            imageId : imageId,\r\n            document : doc,\r\n            type : 'banner'+type,\r\n        });\r\n        alert (\"Image Updated Successfully\");\r\n        getPrevBannerImage();\r\n    }catch(e){\r\n        console.log('Error...', e);\r\n    }\r\n}\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <Sidebar />\r\n                <div className=\"sidebar-overlay\" id=\"sidebar-overlay\" />\r\n                <div className=\"sidebar-mobile-menu-handle\" id=\"sidebar-mobile-menu-handle\" />\r\n                <div className=\"mobile-menu-handle\" />\r\n                <article className=\"content responsive-tables-page\">\r\n                    <div className=\"title-block\">\r\n                        <h3 className=\"title\"> { ` Banner Image >>> `+ titleText}\r\n                            <a href= {pathLink}>\r\n                                <button type=\"button\"  className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\">Ã—</span>\r\n                                    <span className=\"sr-only\">Close</span>\r\n                                </button>\r\n                            </a>\r\n                            <span className=\"sparkline bar\" data-type=\"bar\" />\r\n                        </h3>\r\n                    </div>\r\n                    \r\n                    <form onSubmit={updateBannerProduct} class=\"p-5 bg-light b-top-dark\">\r\n                        <div className=\"form-group row\">\r\n                            <div class=\"col-md-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"description\">Previous Images *</label>\r\n                                    <div className=\"w-100\">\r\n                                        {(preImages.length > 0 ? preImages : []).map(data => {\r\n                                            return(\r\n                                                <span>\r\n                                                    <img class=\"imageBox\" name={\"prevImage-\" + data.id} src={API_URL + \"/api/images?path=bannerImages/\" + data.image_name} onClick={handleSetPrevImage} />\r\n                                                </span>\r\n                                            )\r\n                                        })}\r\n                                    </div>\r\n                                </div>\r\n                            </div>                                       \r\n                            <div class=\"col-md-12\">\r\n                                <div class=\"form-group\">\r\n                                    <div class=\"field\" align=\"left\">\r\n                                        <label for=\"bannerImage\">Choose File to upload new image</label>\r\n                                        <input type=\"file\" className=\"form-control\" id=\"bannerImage\" name=\"bannerImage\" accept=\".png, .jpg, .jpeg\" onChange={handleFileChange} required={preImages.length === 0} />\r\n                                    </div>\r\n                                </div>\r\n                                <span>\r\n                                    <img className=\"imageThumb\" id=\"bannerImageThumb\" src={API_URL + \"/api/images?path=bannerImages/\" + currImage.image_name} />\r\n                                    <br/>\r\n                                    <span className=\"remove\" onClick={handleFileRemove}>Remove image</span>\r\n                                </span>\r\n                            </div> \r\n                            <div class=\"col-md-12\">\r\n                                <input type=\"submit\" value=\"Update\" class=\"btn  px-4 btn-primary\" />\r\n                            </div> \r\n                        </div>\r\n                    </form>\r\n                </article>\r\n            </div>\r\n        )\r\n}"],"sourceRoot":""}