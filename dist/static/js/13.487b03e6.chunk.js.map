{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","utils/datetime.js","modules/Components/Editor.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","moment","require","getDate","date","format","getDateInDDMMYYYY","RESET_VALUES","title","content","link","address","email","mobile","image_name","time","location","contact","Editor","props","type","state","operation","updatableData","data","pathLink","titleText","useState","inputs","setInputs","handleChange","name","value","useEffect","handleSubmit","e","a","preventDefault","doc","document","getElementById","files","isNullOrUndefined","FileReaders","toBase64","image","id","image_id","link_id","FetchAPI","addUpdateFormContent","history","console","log","handleFileChange","window","File","FileList","FileReader","file","undefined","fileReader","onload","setAttribute","result","readAsDataURL","alert","className","href","data-dismiss","aria-label","aria-hidden","data-type","onSubmit","PrayerEventForm","OtherForm","onChange","required","rows","class","align","accept","src","API_URL"],"mappings":"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","file":"static/js/13.487b03e6.chunk.js","sourcesContent":["import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","const moment = require('moment');\r\n\r\n\r\nexport function getDate(date) {\r\n  return moment(date).format(\"YYYY-MM-DD\");\r\n}\r\n\r\n// export function getTime(date) {\r\n//   console.log(date, moment(`${date}`).format(\"HH:mm\"))\r\n//   return moment(date).format(\"HH:mm A\")\r\n// }\r\n\r\nfunction getCurrentDateDBFormat() {\r\n  return moment().format(\"YYYY-MM-DD\")\r\n}\r\n\r\n\r\nfunction getCurrentDate() {\r\n  return moment().format(\"MM/DD/YYYY\")\r\n}\r\n\r\n\r\nfunction getCurrentDateInYYYYMMDD() {\r\n  return moment().format(\"YYYY/MM/DD\")\r\n}\r\n\r\nexport function getDateInDDMMYYYY(date) {\r\n  return moment(date).format(\"DD-MM-YYYY\")\r\n}\r\n\r\nfunction getCurrentDateDDMMYYYY() {\r\n  return moment().format(\"DD-MM-YYYY\")\r\n}\r\n\r\nfunction getTimeinDBFormat(date) {\r\n  return moment(date).format(\"HH:mm:ss\")\r\n}\r\n\r\n\r\n\r\nfunction convertDateInUTC(date) {\r\n  return moment.utc(date);  \r\n}\r\n\r\nfunction setDBDateFormat(date){\r\n  let day = date.split('-')[0];\r\n  let month = date.split('-')[1];\r\n  let year = date.split('-')[2];\r\n  return (year + '-' + month + '-' + day) ;\r\n}\r\n\r\nfunction isBirthDate(date){\r\n  const custDate = new Date(date);\r\n  const currDate = new Date();\r\n  return (custDate.getDate() === currDate.getDate() && custDate.getMonth() === currDate.getMonth());\r\n}\r\n\r\n\r\nfunction addOneDay(date){\r\n  return moment(date).add(1, 'days').format(\"YYYY-MM-DD\");  \r\n}\r\n\r\nfunction subtractOneDay(date){\r\n  return moment(date).subtract(1, 'days').format(\"YYYY-MM-DD\");  \r\n}\r\n\r\nfunction checkPastDate(date) {  \r\n  return moment(date).format(\"YYYY-MM-DD\") > getDate();\r\n}\r\n\r\nfunction checkFutureDate(date) {\r\n  return moment(date).format(\"YYYY-MM-DD\") < getDate();\r\n}\r\n\r\nfunction isSameDate(payment_date, settlement_date) {\r\n  console.log(payment_date === settlement_date, payment_date, settlement_date)\r\n  console.log(moment(payment_date) > moment(settlement_date), moment(payment_date) < moment(settlement_date))\r\n  return payment_date === settlement_date;\r\n}\r\n\r\nfunction checkOverDue(payment_date, settlement_date) {  \r\n  return moment(payment_date).format(\"YYYY-MM-DD\") > moment(settlement_date).format(\"YYYY-MM-DD\");\r\n}\r\n\r\nfunction escapeSunday(date){\r\n  return moment(date).format(\"dddd\") == \"Sunday\";\r\n}\r\n\r\n","import React, {useState, useEffect, Fragment } from 'react';\r\nimport {isNullOrUndefined} from 'util';\r\n\r\n\r\n\r\n// import api\r\nimport FetchAPI from '../../api/APIs.js';\r\n\r\n//Components \r\nimport Header from './Header.js';\r\nimport Sidebar from './Sidebar.js';\r\nimport FileReaders from  '../../utils/fileReader.js';\r\nimport {getDate} from '../../utils/datetime.js';\r\nimport { API_CONSUMER, API_URL } from '../../api/config/Constants.js';\r\n\r\nconst RESET_VALUES = {\r\n  title : '', \r\n  content : '', \r\n  link : '',\r\n  address : '', \r\n  email : '', \r\n  mobile : '',\r\n  date : '',\r\n  image_name : '',\r\n  time : '',\r\n  location: '',\r\n  contact : '',\r\n};\r\n\r\nexport default function Editor(props) {\r\n  const type = props.location.state.type;\r\n  const operation = props.location.state.operation;\r\n  const updatableData = operation === 'Update' ? props.location.state.data : [];\r\n\r\n  let pathLink = '';\r\n  let titleText = '';\r\n\r\n  switch(type){\r\n    case 'Event'         :   titleText = 'Event'         ; pathLink = '/Events';  break;\r\n    case 'Direction'     :   titleText = 'Direction'     ; pathLink = '/Directions'; break;\r\n    case 'Miracle'       :   titleText = ' Miracle'      ; pathLink = '/Miracles'; break;\r\n    case 'Prayer'        :   titleText = ' Prayer'       ; pathLink = '/Prayers'; break;\r\n\r\n    case 'DimpleAnil'    :   titleText = 'DimpleAnil'    ; pathLink = '/DimpleAnil'; break;\r\n    case 'AboutGC'       :   titleText = 'AboutGC'       ; pathLink = '/AboutGC'; break;\r\n    case 'Introduction'  :   titleText = 'Introduction'  ; pathLink = '/Introduction'; break;\r\n    \r\n    case 'about'         :   titleText = 'About us'      ; pathLink = '/About'; break;\r\n    case 'contact'       :   titleText = 'Contact'       ; pathLink = '/Contact'; break;\r\n }\r\n  \r\n\r\n\r\n  const [inputs, setInputs] = useState(RESET_VALUES);\r\n\r\n  const handleChange  = (props) => {\r\n    setInputs({...inputs, [props.target.name]: props.target.value});\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(operation === 'Update'){\r\n      setInputs({\r\n        title : updatableData.title, \r\n        content : updatableData.content, \r\n        link : updatableData.link, \r\n        date: getDate(updatableData.date),\r\n        address : updatableData.address, \r\n        email : updatableData.email, \r\n        mobile : updatableData.mobile,\r\n        image_name : updatableData.image_name,\r\n        time : updatableData.time,\r\n        location: updatableData.location,\r\n        contact : updatableData.contact,\r\n      });\r\n    }\r\n  },[])\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try{\r\n      \r\n      let doc = document.getElementById('uploadImage').files[0];\r\n      const data = {\r\n        operation: operation,\r\n        type: type,\r\n        title: inputs.title,\r\n        content : inputs.content,\r\n        date : getDate(inputs.date)  === \"Invalid date\" ? '' : getDate(inputs.date),\r\n        link : inputs.link,\r\n        image : isNullOrUndefined(doc) ? '' : await FileReaders.toBase64(doc),\r\n        time : inputs.time,\r\n        location: inputs.location,\r\n        contact : inputs.contact,\r\n      }\r\n      \r\n      if(operation === 'Update'){\r\n        data.id = updatableData.id;\r\n        data.image_id = updatableData.image_id;\r\n        data.link_id = updatableData.link_id;\r\n      }\r\n        const result = await FetchAPI.addUpdateFormContent(data);\r\n        props.history.push(pathLink);\r\n      }catch(e){\r\n        console.log('Error...',e);\r\n      }\r\n  }\r\n\r\n\r\n  \r\n  const handleFileChange = (e) => {\r\n    if (window.File && window.FileList && window.FileReader) {\r\n        let file = e.target.files[0];\r\n        if(file !== null && file !== undefined && file !== \"\"){\r\n            let fileReader = new FileReader();\r\n            fileReader.onload = (e) => {\r\n                document.getElementById(\"imageThumb\").setAttribute('src',e.target.result);\r\n                document.getElementById(\"imageThumb\").setAttribute('title', \"Selected image\");\r\n            }\r\n            fileReader.readAsDataURL(file);\r\n        }\r\n    } else {\r\n        alert(\"Your browser doesn't support to File API\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Header />\r\n      <Sidebar/>\r\n        <div className=\"sidebar-overlay\" id=\"sidebar-overlay\" />\r\n        <div className=\"sidebar-mobile-menu-handle\" id=\"sidebar-mobile-menu-handle\" />\r\n        <div className=\"mobile-menu-handle\" />\r\n        <article className=\"content item-editor-page\">\r\n          <div className=\"title-block\">\r\n            <h3 className=\"title\"> {operation + ` ` + titleText}\r\n              <a href= {pathLink} >\r\n                <button type=\"button\"  className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">×</span>\r\n                  <span className=\"sr-only\">Close</span>\r\n                </button>\r\n              </a>\r\n              <span className=\"sparkline bar\" data-type=\"bar\" />\r\n            </h3>\r\n          </div>\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"card card-block\">\r\n              {(type === 'Prayer' || type === 'Event') && <PrayerEventForm inputs = {inputs} handleChange = {handleChange} handleFileChange= {handleFileChange} type = {type} operation = {operation} /> }\r\n              {(type !== 'Prayer' && type !== 'Event' && type !== 'Contact') && <OtherForm inputs = {inputs} handleChange = {handleChange} handleFileChange= {handleFileChange} type = {type} operation = {operation} /> }\r\n            </div>\r\n          </form>\r\n        </article>\r\n      </Fragment>\r\n  )\r\n}\r\n\r\nconst PrayerEventForm = ({inputs, handleChange, handleFileChange, type, operation}) => {\r\n  return(\r\n    <Fragment>\r\n      <div className=\"form-group row\">\r\n        <label className=\"col-sm-2 form-control-label text-xs-right\" > Title* </label>\r\n          <div className=\"col-sm-10\">\r\n            <input className=\"form-control boxed\" type=\"text\" value = {inputs.title} name=\"title\" onChange={handleChange } required />                          \r\n          </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label className=\"col-sm-2 form-control-label text-xs-right\"> Content*  </label>\r\n          <div className=\"col-sm-10\">\r\n            <textarea className=\"form-control boxed \" rows=\"8\" type=\"text\" value = {inputs.content} name=\"content\" onChange={handleChange } required />\r\n          </div>\r\n      </div> \r\n      <div className=\"form-group row\">\r\n        <label className=\"col-sm-2 form-control-label text-xs-right\" > Date*  </label>\r\n          <div className=\"col-sm-10\">\r\n            <input className=\"form-control boxed\" type=\"date\" value = {inputs.date} name=\"date\" onChange={handleChange } required />                          \r\n          </div>\r\n      </div> \r\n      {type === 'Event' &&\r\n        <Fragment> \r\n          <div className=\"form-group row\">\r\n            <label className=\"col-sm-2 form-control-label text-xs-right\" > Time*  </label>\r\n              <div className=\"col-sm-10\">\r\n                <input className=\"form-control boxed\" type=\"time\" value = {inputs.time} name=\"time\" onChange={handleChange } required />                          \r\n              </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-sm-2 form-control-label text-xs-right\" > Event location* </label>\r\n              <div className=\"col-sm-10\">\r\n                <input className=\"form-control boxed\" type=\"text\" value = {inputs.location} name=\"location\" onChange={handleChange } required />                          \r\n              </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-sm-2 form-control-label text-xs-right\" > Contact with* </label>\r\n              <div className=\"col-sm-10\">\r\n                <input className=\"form-control boxed\" type=\"text\" value = {inputs.contact} name=\"contact\" onChange={handleChange } required />                          \r\n              </div>\r\n          </div>\r\n        </Fragment>\r\n      }\r\n      <div className=\"form-group row\">\r\n        <label className=\"col-sm-2 form-control-label text-xs-right\"> Link  </label>\r\n          <div className=\"col-sm-10\">\r\n            <input className=\"form-control boxed\" type=\"url\" value = {inputs.link} name=\"link\" onChange={handleChange } />\r\n          </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label className=\"col-sm-2 form-control-label text-xs-right\" > Upload Image* </label>\r\n          <div className=\"col-sm-10\">\r\n            <div class=\"field\" align=\"left\">\r\n                <input type=\"file\" className=\"form-control\" id=\"uploadImage\" name=\"uploadImage\" accept=\".png, .jpg, .jpeg\" onChange={handleFileChange} required = {operation === 'Add'} />\r\n            </div>\r\n            <span>\r\n              <img className=\"imageThumb\" id=\"imageThumb\" src={ API_URL + `/api/images?path=${type}/` + inputs.image_name} />\r\n            </span>\r\n          </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <div className=\"col-sm-10 col-sm-offset-2\">\r\n          <button type=\"submit\"  className=\"btn btn-primary\"> Submit </button>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\n\r\n\r\nconst OtherForm = ({inputs, handleChange, handleFileChange, type, operation}) => {\r\n  return(\r\n    <Fragment>\r\n      <div className=\"form-group row\">\r\n        <label className=\"col-sm-2 form-control-label text-xs-right\" > Title* </label>\r\n          <div className=\"col-sm-10\">\r\n            <input className=\"form-control boxed\" type=\"text\" value = {inputs.title} name=\"title\" onChange={handleChange } required />                          \r\n          </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label className=\"col-sm-2 form-control-label text-xs-right\"> Content*  </label>\r\n          <div className=\"col-sm-10\">\r\n            <textarea className=\"form-control boxed \" rows=\"8\" type=\"text\" value = {inputs.content} name=\"content\" onChange={handleChange } required />\r\n          </div>\r\n      </div> \r\n      {/* <div className=\"form-group row\">\r\n        <label className=\"col-sm-2 form-control-label text-xs-right\" > Date*  </label>\r\n          <div className=\"col-sm-10\">\r\n            <input className=\"form-control boxed\" type=\"date\" value = {inputs.date} name=\"date\" onChange={handleChange } required />                          \r\n          </div>\r\n      </div>  */}\r\n      {/* <div className=\"form-group row\">\r\n        <label className=\"col-sm-2 form-control-label text-xs-right\"> Link </label>\r\n          <div className=\"col-sm-10\">\r\n            <input className=\"form-control boxed\" type=\"url\" value = {inputs.link} name=\"link\" onChange={handleChange } />\r\n          </div>\r\n      </div> */}\r\n      <div className=\"form-group row\">\r\n        <label className=\"col-sm-2 form-control-label text-xs-right\" > Upload Image* </label>\r\n          <div className=\"col-sm-10\">\r\n            <div class=\"field\" align=\"left\">\r\n                <input type=\"file\" className=\"form-control\" id=\"uploadImage\" name=\"uploadImage\" accept=\".png, .jpg, .jpeg\" onChange={handleFileChange} required = {operation === 'Add'} />\r\n            </div>\r\n            <span>\r\n              <img className=\"imageThumb\" id=\"imageThumb\" src={ API_URL + `/api/images?path=${type}/` + inputs.image_name} />\r\n            </span>\r\n          </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <div className=\"col-sm-10 col-sm-offset-2\">\r\n          <button type=\"submit\"  className=\"btn btn-primary\"> Submit </button>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}"],"sourceRoot":""}